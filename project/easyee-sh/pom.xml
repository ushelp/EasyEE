<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.easyproject</groupId>
	<artifactId>easyee-sh</artifactId>
	<packaging>war</packaging>
	<version>4.4.0-RELEASE</version>
	<name>easyee-sh Maven Webapp</name>
	<url>http://easyproject.cn/easyee</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<hibernate.version>5.1.10.Final</hibernate.version>
		<spring.version>4.3.13.RELEASE</spring.version>

		<slf4j.version>1.7.21</slf4j.version>
		<log4j2.version>2.7</log4j2.version>

		<druid.version>1.1.5</druid.version>
		<oracle.version>11.2.0.4</oracle.version>
		<mysql.version>5.1.34</mysql.version>

		<commonsfileupload.version>1.3.2</commonsfileupload.version>
		<gson.version>2.8.2</gson.version>
		<jackson.version>2.9.2</jackson.version>
		<ognl.version>3.1.16</ognl.version>
		<shiro.version>1.2.6</shiro.version>
		<easyshiro.version>2.6.0-RELEASE</easyshiro.version>
		<easyshiro.redis.cache.version>2.6.0-RELEASE</easyshiro.redis.cache.version>
		<easyfilter.version>2.0.2-RELEASE</easyfilter.version>
		<jstl.version>1.2</jstl.version>
		<!-- JavaMelody -->
		<javamelody.version>1.70.0</javamelody.version>
		<itext.version>2.1.7</itext.version>
		<xstream.version>1.4.10</xstream.version>
		<jrobin.version>1.5.9</jrobin.version>
		<!-- Redis -->
		<spring.data.redis.version>1.8.9.RELEASE</spring.data.redis.version>
		<jedis.version>2.9.0</jedis.version>
		
		<!-- CKFinder -->
		<ckfinder.version>2.6.2.1</ckfinder.version>
		<!-- Test -->
		<junit.version>4.12</junit.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency> 
		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>

		<!-- Redis Start -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
			<version>${spring.data.redis.version}</version>
		</dependency>

		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${jedis.version}</version>
		</dependency>



		<!-- Redis End -->

		<!-- JavaMelody Start -->
		<!-- javamelody-core -->
		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-core</artifactId>
			<version>${javamelody.version}</version>
		</dependency>
		<!-- itext, option to add PDF export -->
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>${itext.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>bcmail-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bcprov-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bctsp-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- The dependencies jrobin (included in javamelody-core) and if you wish 
			xstream as an option for the xml and json export are: -->
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>${xstream.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jrobin</groupId>
			<artifactId>jrobin</artifactId>
			<version>${jrobin.version}</version>
		</dependency>
		<!-- JavaMelody End -->


		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>


		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commonsfileupload.version}</version>
		</dependency>


		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>${shiro.version}</version>
			<exclusions>
				<!-- 和EasyShiro集成，需要排除 -->
				<exclusion>
					<artifactId>ehcache-core</artifactId>
					<groupId>net.sf.ehcache</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-cas</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-quartz</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>cn.easyproject</groupId>
			<artifactId>easyshiro</artifactId>
			<version>${easyshiro.version}</version>
		</dependency>
		<dependency>
			<groupId>cn.easyproject</groupId>
			<artifactId>easyshiro-redis-cache</artifactId>
			<version>${easyshiro.redis.cache.version}</version>
		</dependency>



		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>




		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.8.6</version>
		</dependency>
		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency> <!-- 桥接：告诉Slf4j使用Log4j2 -->
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency> <!-- 桥接：告诉commons logging使用Log4j2 -->
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jcl</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		



		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<!-- <dependency> <groupId>cn.easyproject</groupId> <artifactId>ojdbc6</artifactId> 
			<version>${oracle.version}</version> </dependency> -->

		<dependency>
			<groupId>org.acegisecurity</groupId>
			<artifactId>acegi-security</artifactId>
			<version>1.0.7</version>
			<!-- 与Struts2集成时，需要排除 -->
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<!-- <exclusion>
					<groupId>commons-lang</groupId>
					<artifactId>commons-lang</artifactId>
				</exclusion> -->
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>ognl</groupId>
			<artifactId>ognl</artifactId>
			<version>${ognl.version}</version>
		</dependency>



		<dependency>
			<groupId>cn.easyproject</groupId>
			<artifactId>easycommons-object</artifactId>
			<version>1.7.4-RELEASE</version>
		</dependency>
		<dependency>
			<groupId>cn.easyproject</groupId>
			<artifactId>easycommons-image</artifactId>
			<version>1.4.2-RELEASE</version>
		</dependency>
		<dependency>
			<groupId>cn.easyproject</groupId>
			<artifactId>easycommons-properties</artifactId>
			<version>2.0.0-RELEASE</version>
		</dependency>
		<dependency>
			<groupId>cn.easyproject</groupId>
			<artifactId>easyfilter</artifactId>
			<version>${easyfilter.version}</version>
		</dependency>


		<!-- CKFinder -->
		<dependency>
			<groupId>com.ckfinder</groupId>
			<artifactId>CKFinder</artifactId>
			<version>${ckfinder.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ckfinder</groupId>
			<artifactId>CKFinderPlugin-FileEditor</artifactId>
			<version>${ckfinder.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ckfinder</groupId>
			<artifactId>CKFinderPlugin-ImageResize</artifactId>
			<version>${ckfinder.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ckfinder</groupId>
			<artifactId>CKFinderPlugin-Watermark</artifactId>
			<version>${ckfinder.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>


	</dependencies>
	<build>
		<finalName>easyee-sh</finalName>
		<plugins>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.3.14.v20161028</version>
				<configuration>
					<httpConnector>
						<port>9999</port>
					</httpConnector>
					<stopPort>9966</stopPort>
					<stopKey>shutdown</stopKey>
					<stopWait>10</stopWait>
					<!-- Hot Deploy -->
					<!-- <scanIntervalSeconds>5</scanIntervalSeconds> -->
					<!-- <webApp> <contextPath>/easyee-sh</contextPath> </webApp> -->
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<warName>easyee-sh</warName>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/</path>
					<port>8080</port>
					<uriEncoding>UTF-8</uriEncoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
					<compilerArguments>
						<extdirs>src\main\webapp\WEB-INF\lib</extdirs>
					</compilerArguments>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.hbm.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
				</includes>
			</resource>
		</resources>
	</build>

	<repositories>
		<repository>
			<id>*</id>
			<name>Central Repository</name>
			<url>https://oss.sonatype.org/service/local/repositories/releases/content/</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>
