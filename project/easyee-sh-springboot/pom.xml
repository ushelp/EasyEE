<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- jar runtime pom -->
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.easyproject</groupId>
	<artifactId>easyee-sh-springboot</artifactId>
	<version>4.4.0-RELEASE</version>
	<packaging>jar</packaging>
	<name>easyee-sh Maven Webapp</name>
	<url>http://easyproject.cn/easyee</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.7</java.version>
		<tomcat.version>8.5.8</tomcat.version>

		<hibernate.version>5.1.10.Final</hibernate.version>
		<springboot.version>1.5.9.RELEASE</springboot.version>

		<slf4j.version>1.7.21</slf4j.version>
		<log4j2.version>2.7</log4j2.version>

		<druid.version>1.1.5</druid.version>
		<mysql.version>5.1.34</mysql.version>
		<oracle.version>11.2.0.4</oracle.version>

		<commonsfileupload.version>1.3.2</commonsfileupload.version>
		<gson.version>2.8.2</gson.version>
		<jackson.version>2.9.2</jackson.version>
		<ognl.version>3.1.16</ognl.version>
		<shiro.version>1.2.6</shiro.version>
		<easyshiro.version>2.6.0-RELEASE</easyshiro.version>
		<easyshiro.redis.cache.version>2.6.0-RELEASE</easyshiro.redis.cache.version>
		<easyfilte.version>2.0.2-RELEASE</easyfilte.version>
		<jstl.version>1.2</jstl.version>
		<!-- JavaMelody -->
		<javamelody.version>1.70.0</javamelody.version>
		<itext.version>2.1.7</itext.version>
		<xstream.version>1.4.18</xstream.version>
		<jrobin.version>1.5.9</jrobin.version>
		<!-- CKFinder -->
		<ckfinder.version>2.6.2.1</ckfinder.version>
		<!-- Redis -->
		<spring.data.redis.version>1.8.9.RELEASE</spring.data.redis.version>
		<jedis.version>2.9.0</jedis.version>
	</properties>

	<!-- Inherit defaults from Spring Boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.2.RELEASE</version>
	</parent>


	<dependencies>

		<!-- Spring Boot test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

		<!-- Redis Start -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
			<version>${spring.data.redis.version}</version>
		</dependency>

		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${jedis.version}</version>
		</dependency>



		<!-- Redis End -->

		<!-- JavaMelody Start -->
		<!-- javamelody-core -->
		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-spring-boot-starter</artifactId>
			<version>${javamelody.version}</version>
		</dependency>
		<!-- itext, option to add PDF export -->
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>${itext.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>bcmail-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bcprov-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bctsp-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- The dependencies jrobin (included in javamelody-core) and if you wish 
			xstream as an option for the xml and json export are: -->
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>${xstream.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jrobin</groupId>
			<artifactId>jrobin</artifactId>
			<version>${jrobin.version}</version>
		</dependency>
		<!-- JavaMelody End -->
		<!-- Spring Boot web(Tomcat) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<!-- CKFinder -->
		<dependency>
			<groupId>com.ckfinder</groupId>
			<artifactId>CKFinder</artifactId>
			<version>${ckfinder.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ckfinder</groupId>
			<artifactId>CKFinderPlugin-FileEditor</artifactId>
			<version>${ckfinder.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ckfinder</groupId>
			<artifactId>CKFinderPlugin-ImageResize</artifactId>
			<version>${ckfinder.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ckfinder</groupId>
			<artifactId>CKFinderPlugin-Watermark</artifactId>
			<version>${ckfinder.version}</version>
		</dependency>

		<!-- Spring Boot devtools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>


		<!-- Spring Boot log(Log4J2) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<!-- Spring Boot JPA -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- <dependency> <groupId>cn.easyproject</groupId> <artifactId>ojdbc6</artifactId> 
			<version>${oracle.version}</version> </dependency> -->
		<!-- Druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>

		<!-- Spring Boot EHCache -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>

		<!-- Spring Boot AOP -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<!-- Upload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commonsfileupload.version}</version>
		</dependency>


		<!-- Shiro -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>${shiro.version}</version>
			<exclusions>
				<!-- 和EasyShiro集成，需要排除 -->
				<exclusion>
					<artifactId>ehcache-core</artifactId>
					<groupId>net.sf.ehcache</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-cas</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-quartz</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>cn.easyproject</groupId>
			<artifactId>easyshiro</artifactId>
			<version>${easyshiro.version}</version>
		</dependency>
		<dependency>
			<groupId>cn.easyproject</groupId>
			<artifactId>easyshiro-redis-cache</artifactId>
			<version>${easyshiro.redis.cache.version}</version>
		</dependency>

		<dependency>
			<groupId>cn.easyproject</groupId>
			<artifactId>easycommons-object</artifactId>
			<version>1.7.4-RELEASE</version>
		</dependency>
		<dependency>
			<groupId>cn.easyproject</groupId>
			<artifactId>easycommons-image</artifactId>
			<version>1.4.2-RELEASE</version>
		</dependency>
		<dependency>
			<groupId>cn.easyproject</groupId>
			<artifactId>easycommons-properties</artifactId>
			<version>2.0.0-RELEASE</version>
		</dependency>
		<dependency>
			<groupId>cn.easyproject</groupId>
			<artifactId>easyfilter</artifactId>
			<version>${easyfilte.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>ognl</groupId>
			<artifactId>ognl</artifactId>
			<version>3.1.12</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
		</dependency>
	</dependencies>
	<build>
		<!-- <finalName>easyee-sh-springboot</finalName> -->
		<plugins>

			<!-- Package as an executable jar -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
					<compilerArguments>
						<extdirs>src\main\webapp\WEB-INF\lib</extdirs>
					</compilerArguments>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<!-- JSP 打 jar 包时将jsp文件拷贝到META-INF目录下 -->
			<resource>
				<!-- 指定resources插件处理哪个目录下的资源文件 -->
				<directory>src/main/webapp</directory>
				<!--注意此次必须要放在此目录下才能被访问到 -->
				<targetPath>META-INF/resources</targetPath>
				<includes>
					<include>**/**</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/**</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/**</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
	</build>
</project>
